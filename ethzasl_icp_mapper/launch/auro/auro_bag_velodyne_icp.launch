<?xml version="1.0"?>
<launch>
  <!--This is playing bag files - make sure sim time is used-->
  <param name="use_sim_time" value="true"/>
  <!--Convert velodyne packets from bag files to point clouds for visualization-->
	<!--Convert velodyne packets from bag files to point clouds for visualization-->
	<arg name="velodyne_packet2pointcloud" default="false" />
	<arg name="velodyne_packets2pointcloud" default="false" />

	<!-- velodyne_packvelodyne_decoderet2pointcloud -->
	<node pkg="velodyne_decoder" type="velodyne_decoder_node" name="velodyne_decoder" if="$(arg velodyne_packet2pointcloud)" >
		<remap from="velodyne_packet" to="/sensors/velodyne_packet" />
		<remap from="velodyne_point_cloud" to="/velodyne_points" />
		<param name="min_range" value="0.3"/>
		<param name="max_range" value="150"/>
		<param name="frequency" value="20"/>
		<param name="publish_point_cloud" value="true"/>
	</node>
	<!-- velodyne_packets2pointcloud -->
	<node pkg="velodyne_pointcloud" type="cloud_node" name="velodyne_pointcloud" if="$(arg velodyne_packets2pointcloud)" >
		<remap from="velodyne_packets" to="/sensors/velodyne_packets" />			
		<param name="min_range"   value="0.3"/>
		<param name="max_range"   value="150"/>
		<param name="calibration" value="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
	</node>
  
  <!-- Velodyne base_link transform -->
  <node pkg="tf" type="static_transform_publisher" name="baselink_to_velodyne"    args="1.77 0.010 2.0 0 0.21 0 base_link velodyne 100" />
  
  <!-- Dynamic mapper node-->
  <node name="mapper" type="dynamic_mapper" pkg="ethzasl_icp_mapper" output="screen">
    <remap from="cloud_in" to="/velodyne_points" />
    <param name="localizing" value="true" />
    <param name="mapping" value="true" />
    <param name="finalMapName" value="generatedMap.ply" />
    <param name="filePath" value="/media/fast_data/MAPPING/" />
    <param name="subscribe_scan" value="false" />
    <param name="subscribe_cloud" value="true" />
    <param name="publishMapTf" value="true" />
    <param name="useConstMotionModel" value="true" />
    <param name="icpConfig" value="$(find ethzasl_icp_mapper)/launch/auro/icp_dynamic_outdoor.yaml" />
    <param name="inputFiltersConfig" value="$(find ethzasl_icp_mapper)/launch/auro/input_filters_outdoor.yaml" />
<!--
    <param name="mapPostFiltersConfig" value="$(find ethzasl_icp_mapper)/launch/auro/mapPost_filters_outdoor.yaml" />
-->
    <!--Put that back! -->
    <param name="odom_frame" value="/velodyne" />
    <param name="map_frame" value="/map" />
    <param name="robot_frame" value="base_link" />
    <param name="useROSLogger" value="true" />
    <param name="inputQueueSize" value="1" />
    <param name="tfRefreshPeriod" value="0.005" />
    <param name="sensorMaxRange" value="100" />
    <param name="minOverlap" value="0.6" />
    <param name="maxOverlapToMerge" value="0.99990" />
    <param name="minReadingPointCount" value="500" />
    <param name="minMapPointCount" value="10000" />
    <!-- quick fix to have map published each time -->
    <!-- Parameters for dynamic elements -->
    <param name="priorStatic" value="0.8"/>
    <param name="priorDyn" value="0.2"/>
    <param name="maxAngle" value="0.04"/>
    <param name="eps_a" value="0.20"/>
    <param name="eps_d" value="0.1"/>
    <param name="alpha" value="0.99"/>
    <param name="beta" value="0.90"/>
    <param name="maxDyn" value="0.90"/>
    <param name="maxDistNewPoint" value="0.01" />
  </node>
  <!--rviz-->
  <node name="$(anon rviz)" type="rviz" pkg="rviz" args="-d $(find ethzasl_icp_mapper)/rviz/disp.rviz" output="screen" />

</launch>
